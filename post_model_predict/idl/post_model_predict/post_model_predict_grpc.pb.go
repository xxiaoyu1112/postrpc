// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package post_model_predict

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PostModelPredictClient is the client API for PostModelPredict service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PostModelPredictClient interface {
	Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error)
	PredictAysnc(ctx context.Context, in *PredictAysncRequest, opts ...grpc.CallOption) (*PredictAysncResponse, error)
	GetPredictAysncResult(ctx context.Context, in *GetPredictAysncResultRequest, opts ...grpc.CallOption) (*GetPredictAysncResultResponse, error)
}

type postModelPredictClient struct {
	cc grpc.ClientConnInterface
}

func NewPostModelPredictClient(cc grpc.ClientConnInterface) PostModelPredictClient {
	return &postModelPredictClient{cc}
}

func (c *postModelPredictClient) Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictResponse, error) {
	out := new(PredictResponse)
	err := c.cc.Invoke(ctx, "/post_model_predict.PostModelPredict/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postModelPredictClient) PredictAysnc(ctx context.Context, in *PredictAysncRequest, opts ...grpc.CallOption) (*PredictAysncResponse, error) {
	out := new(PredictAysncResponse)
	err := c.cc.Invoke(ctx, "/post_model_predict.PostModelPredict/PredictAysnc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postModelPredictClient) GetPredictAysncResult(ctx context.Context, in *GetPredictAysncResultRequest, opts ...grpc.CallOption) (*GetPredictAysncResultResponse, error) {
	out := new(GetPredictAysncResultResponse)
	err := c.cc.Invoke(ctx, "/post_model_predict.PostModelPredict/GetPredictAysncResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostModelPredictServer is the server API for PostModelPredict service.
// All implementations must embed UnimplementedPostModelPredictServer
// for forward compatibility
type PostModelPredictServer interface {
	Predict(context.Context, *PredictRequest) (*PredictResponse, error)
	PredictAysnc(context.Context, *PredictAysncRequest) (*PredictAysncResponse, error)
	GetPredictAysncResult(context.Context, *GetPredictAysncResultRequest) (*GetPredictAysncResultResponse, error)
	mustEmbedUnimplementedPostModelPredictServer()
}

// UnimplementedPostModelPredictServer must be embedded to have forward compatible implementations.
type UnimplementedPostModelPredictServer struct {
}

func (UnimplementedPostModelPredictServer) Predict(context.Context, *PredictRequest) (*PredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}
func (UnimplementedPostModelPredictServer) PredictAysnc(context.Context, *PredictAysncRequest) (*PredictAysncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictAysnc not implemented")
}
func (UnimplementedPostModelPredictServer) GetPredictAysncResult(context.Context, *GetPredictAysncResultRequest) (*GetPredictAysncResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPredictAysncResult not implemented")
}
func (UnimplementedPostModelPredictServer) mustEmbedUnimplementedPostModelPredictServer() {}

// UnsafePostModelPredictServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PostModelPredictServer will
// result in compilation errors.
type UnsafePostModelPredictServer interface {
	mustEmbedUnimplementedPostModelPredictServer()
}

func RegisterPostModelPredictServer(s grpc.ServiceRegistrar, srv PostModelPredictServer) {
	s.RegisterService(&PostModelPredict_ServiceDesc, srv)
}

func _PostModelPredict_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostModelPredictServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post_model_predict.PostModelPredict/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostModelPredictServer).Predict(ctx, req.(*PredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostModelPredict_PredictAysnc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictAysncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostModelPredictServer).PredictAysnc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post_model_predict.PostModelPredict/PredictAysnc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostModelPredictServer).PredictAysnc(ctx, req.(*PredictAysncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostModelPredict_GetPredictAysncResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPredictAysncResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostModelPredictServer).GetPredictAysncResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post_model_predict.PostModelPredict/GetPredictAysncResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostModelPredictServer).GetPredictAysncResult(ctx, req.(*GetPredictAysncResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PostModelPredict_ServiceDesc is the grpc.ServiceDesc for PostModelPredict service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PostModelPredict_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "post_model_predict.PostModelPredict",
	HandlerType: (*PostModelPredictServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _PostModelPredict_Predict_Handler,
		},
		{
			MethodName: "PredictAysnc",
			Handler:    _PostModelPredict_PredictAysnc_Handler,
		},
		{
			MethodName: "GetPredictAysncResult",
			Handler:    _PostModelPredict_GetPredictAysncResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "post_model_predict.proto",
}
